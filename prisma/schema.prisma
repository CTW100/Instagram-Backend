// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  username  String    @unique
  email     String    @unique
  password  String
  bio       String?
  avatar    String?
  photos    Photo[]
  likes     Like[]
  followers User[]    @relation("FollowRelation", references: [id])
  following User[]    @relation("FollowRelation", references: [id])
  comments  Comment[]
  rooms     Room[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  message   Message[]
}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  comments  Comment[]
}

model Hashtag {
  id        Int       @id @default(autoincrement())
  hashtag   String    @unique
  photos    Photo[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Like {
  id        Int       @id @default(autoincrement()) 
  photo     Photo     @relation(fields: [photoId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  photoId   Int
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([photoId, userId]) // 둘 다 한번에 unique를 줌 && 두 필드를 합쳐서 unique한 값을 만듦. #6.10에서 확인할 것.
}

model Comment {
  id        Int       @id @default(autoincrement()) 
  user      User      @relation(fields: [userId], references: [id])
  photo     Photo     @relation(fields: [photoId], references: [id])
  userId    Int
  photoId   Int
  payload   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Room {
  id        Int       @id @default(autoincrement())
  users     User[]
  messaage  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        Int        @id @default(autoincrement())
  payload   String
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  room      Room       @relation(fields: [roomId], references: [id])
  roomId    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}